# BOF
on:
  workflow_dispatch:
  push:
  pull_request:
  release:
jobs:
  # --------------------------------------------
  build:
    name: Artifact build
    strategy:
      matrix:
        operatingSystem: [ubuntu-22.04, windows-2022]
        nodeVersion: [12, 16]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    # 
    steps:
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodeVersion }}
    - uses: actions/checkout@v3
    - name: Detach HEAD
      run: |
         git checkout --detach 
         echo "--------------------------------------------"
         git status
         echo "--------------------------------------------"
    - name: Install dependencies
      run: |
        cd node
        npm install
    - name: Install ncc 
      run: |
        cd node
        npm i -g @vercel/ncc@0.36.0
    - name: Compile 
      run: |
        cd node
        ncc build index.js --license licenses.txt
    - name: Add Metadata 
      run: |
        cd node
        npm run add-metadata 
    - name: Publish
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.operatingSystem }}-node-${{ matrix.nodeVersion }}
        path: |
          node/dist/
          node/package-lock.json
          README.md
          action.yml
  # --------------------------------------------
  test:
    name: Artifact Test
    strategy:
      matrix:
        operatingSystem: [ubuntu-22.04, windows-2022]
        nodeVersion: [12, 16]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    needs: [build]
    #
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.operatingSystem }}-node-${{ matrix.nodeVersion }}
      - name: Debug
        run: |
          ls -lR 
      - name: Execute One
        uses: ./
        with:
          apiToken: ${{ secrets.GITHUB_TOKEN }}
          terraformFmtType: 'check'
      - name: Execute Two
        uses: ./
        with:
          apiToken: ${{ secrets.GITHUB_TOKEN }}
          terraformFmtType: 'write'
# EOF